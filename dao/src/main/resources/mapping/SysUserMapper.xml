<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auth.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.auth.entity.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="officeId" jdbcType="INTEGER" property="officeid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="lastLoginIp" jdbcType="VARCHAR" property="lastloginip" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="loginCount" jdbcType="INTEGER" property="logincount" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="isEnable" jdbcType="INTEGER" property="isenable" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, officeId, `name`, account, `password`, lastLoginIp, lastLoginTime, loginCount, 
    createTime, isEnable
  </sql>
  <select id="selectByExample" parameterType="com.auth.entity.SysUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.auth.entity.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user (id, officeId, `name`, 
      account, `password`, lastLoginIp, 
      lastLoginTime, loginCount, createTime, 
      isEnable)
    values (#{id,jdbcType=INTEGER}, #{officeid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{lastloginip,jdbcType=VARCHAR}, 
      #{lastlogintime,jdbcType=TIMESTAMP}, #{logincount,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{isenable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.auth.entity.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="officeid != null">
        officeId,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="lastloginip != null">
        lastLoginIp,
      </if>
      <if test="lastlogintime != null">
        lastLoginTime,
      </if>
      <if test="logincount != null">
        loginCount,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="isenable != null">
        isEnable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="officeid != null">
        #{officeid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastloginip != null">
        #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logincount != null">
        #{logincount,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isenable != null">
        #{isenable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.auth.entity.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    <set>
      <if test="officeid != null">
        officeId = #{officeid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastloginip != null">
        lastLoginIp = #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logincount != null">
        loginCount = #{logincount,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isenable != null">
        isEnable = #{isenable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.auth.entity.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set officeId = #{officeid,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      lastLoginIp = #{lastloginip,jdbcType=VARCHAR},
      lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      loginCount = #{logincount,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      isEnable = #{isenable,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>