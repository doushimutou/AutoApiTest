<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auth.dao.TestApiMapper">
  <resultMap id="BaseResultMap" type="com.auth.entity.TestApi">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="http_type" jdbcType="VARCHAR" property="httpType" />
    <result column="request_type" jdbcType="VARCHAR" property="requestType" />
    <result column="apiAddress" jdbcType="VARCHAR" property="apiaddress" />
    <result column="request_head" jdbcType="VARCHAR" property="requestHead" />
    <result column="requestParameterType" jdbcType="VARCHAR" property="requestparametertype" />
    <result column="requestParameter" jdbcType="VARCHAR" property="requestparameter" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="mockStatus" jdbcType="TINYINT" property="mockstatus" />
    <result column="mock_code" jdbcType="VARCHAR" property="mockCode" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="userUpdate" jdbcType="VARCHAR" property="userupdate" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="ApiGroupLevelFirstId" jdbcType="INTEGER" property="apigrouplevelfirstid" />
    <result column="ApiGroupLevelSecondId" jdbcType="INTEGER" property="apigrouplevelsecondid" />
    <result column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="response" jdbcType="VARCHAR" property="response" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.auth.entity.TestApi">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="data" jdbcType="LONGVARCHAR" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, `name`, http_type, request_type, apiAddress, request_head, requestParameterType, 
    requestParameter, `status`, mockStatus, mock_code, updateTime, userUpdate, description, 
    ApiGroupLevelFirstId, ApiGroupLevelSecondId, projectId, response
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `data`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.auth.entity.TestApiExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.auth.entity.TestApiExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from test_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test_api
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from test_api
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.auth.entity.TestApi" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into test_api (id, `name`, http_type, 
      request_type, apiAddress, request_head, 
      requestParameterType, requestParameter, 
      `status`, mockStatus, mock_code, 
      updateTime, userUpdate, description, 
      ApiGroupLevelFirstId, ApiGroupLevelSecondId, 
      projectId, response, `data`
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{httpType,jdbcType=VARCHAR}, 
      #{requestType,jdbcType=VARCHAR}, #{apiaddress,jdbcType=VARCHAR}, #{requestHead,jdbcType=VARCHAR}, 
      #{requestparametertype,jdbcType=VARCHAR}, #{requestparameter,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{mockstatus,jdbcType=TINYINT}, #{mockCode,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{userupdate,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{apigrouplevelfirstid,jdbcType=INTEGER}, #{apigrouplevelsecondid,jdbcType=INTEGER}, 
      #{projectid,jdbcType=INTEGER}, #{response,jdbcType=VARCHAR}, #{data,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.auth.entity.TestApi">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into test_api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="httpType != null">
        http_type,
      </if>
      <if test="requestType != null">
        request_type,
      </if>
      <if test="apiaddress != null">
        apiAddress,
      </if>
      <if test="requestHead != null">
        request_head,
      </if>
      <if test="requestparametertype != null">
        requestParameterType,
      </if>
      <if test="requestparameter != null">
        requestParameter,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="mockstatus != null">
        mockStatus,
      </if>
      <if test="mockCode != null">
        mock_code,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="userupdate != null">
        userUpdate,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="apigrouplevelfirstid != null">
        ApiGroupLevelFirstId,
      </if>
      <if test="apigrouplevelsecondid != null">
        ApiGroupLevelSecondId,
      </if>
      <if test="projectid != null">
        projectId,
      </if>
      <if test="response != null">
        response,
      </if>
      <if test="data != null">
        `data`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="httpType != null">
        #{httpType,jdbcType=VARCHAR},
      </if>
      <if test="requestType != null">
        #{requestType,jdbcType=VARCHAR},
      </if>
      <if test="apiaddress != null">
        #{apiaddress,jdbcType=VARCHAR},
      </if>
      <if test="requestHead != null">
        #{requestHead,jdbcType=VARCHAR},
      </if>
      <if test="requestparametertype != null">
        #{requestparametertype,jdbcType=VARCHAR},
      </if>
      <if test="requestparameter != null">
        #{requestparameter,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="mockstatus != null">
        #{mockstatus,jdbcType=TINYINT},
      </if>
      <if test="mockCode != null">
        #{mockCode,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="userupdate != null">
        #{userupdate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="apigrouplevelfirstid != null">
        #{apigrouplevelfirstid,jdbcType=INTEGER},
      </if>
      <if test="apigrouplevelsecondid != null">
        #{apigrouplevelsecondid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="response != null">
        #{response,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.auth.entity.TestApi">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update test_api
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="httpType != null">
        http_type = #{httpType,jdbcType=VARCHAR},
      </if>
      <if test="requestType != null">
        request_type = #{requestType,jdbcType=VARCHAR},
      </if>
      <if test="apiaddress != null">
        apiAddress = #{apiaddress,jdbcType=VARCHAR},
      </if>
      <if test="requestHead != null">
        request_head = #{requestHead,jdbcType=VARCHAR},
      </if>
      <if test="requestparametertype != null">
        requestParameterType = #{requestparametertype,jdbcType=VARCHAR},
      </if>
      <if test="requestparameter != null">
        requestParameter = #{requestparameter,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="mockstatus != null">
        mockStatus = #{mockstatus,jdbcType=TINYINT},
      </if>
      <if test="mockCode != null">
        mock_code = #{mockCode,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="userupdate != null">
        userUpdate = #{userupdate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="apigrouplevelfirstid != null">
        ApiGroupLevelFirstId = #{apigrouplevelfirstid,jdbcType=INTEGER},
      </if>
      <if test="apigrouplevelsecondid != null">
        ApiGroupLevelSecondId = #{apigrouplevelsecondid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        projectId = #{projectid,jdbcType=INTEGER},
      </if>
      <if test="response != null">
        response = #{response,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        `data` = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.auth.entity.TestApi">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update test_api
    set `name` = #{name,jdbcType=VARCHAR},
      http_type = #{httpType,jdbcType=VARCHAR},
      request_type = #{requestType,jdbcType=VARCHAR},
      apiAddress = #{apiaddress,jdbcType=VARCHAR},
      request_head = #{requestHead,jdbcType=VARCHAR},
      requestParameterType = #{requestparametertype,jdbcType=VARCHAR},
      requestParameter = #{requestparameter,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      mockStatus = #{mockstatus,jdbcType=TINYINT},
      mock_code = #{mockCode,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      userUpdate = #{userupdate,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      ApiGroupLevelFirstId = #{apigrouplevelfirstid,jdbcType=INTEGER},
      ApiGroupLevelSecondId = #{apigrouplevelsecondid,jdbcType=INTEGER},
      projectId = #{projectid,jdbcType=INTEGER},
      response = #{response,jdbcType=VARCHAR},
      `data` = #{data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.auth.entity.TestApi">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update test_api
    set `name` = #{name,jdbcType=VARCHAR},
      http_type = #{httpType,jdbcType=VARCHAR},
      request_type = #{requestType,jdbcType=VARCHAR},
      apiAddress = #{apiaddress,jdbcType=VARCHAR},
      request_head = #{requestHead,jdbcType=VARCHAR},
      requestParameterType = #{requestparametertype,jdbcType=VARCHAR},
      requestParameter = #{requestparameter,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      mockStatus = #{mockstatus,jdbcType=TINYINT},
      mock_code = #{mockCode,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      userUpdate = #{userupdate,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      ApiGroupLevelFirstId = #{apigrouplevelfirstid,jdbcType=INTEGER},
      ApiGroupLevelSecondId = #{apigrouplevelsecondid,jdbcType=INTEGER},
      projectId = #{projectid,jdbcType=INTEGER},
      response = #{response,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>